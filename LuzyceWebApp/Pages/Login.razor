@page "/login"
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavManager
@inject AccountService AccountService

@using LuzyceWebApp.Services
@using Microsoft.AspNetCore.Components.Authorization
@using Luzyce.Core.Models.User
@inject IJSRuntime js

@if (showError)
{
    <div class="alert alert-danger" role="alert">
        @errorMessage
    </div>
}

<EditForm Model="User" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="row">
        <div class="col">
            @* Login *@
            <input @bind="User.Login"
                   class="form-control"
                   type="text"
                   placeholder="Login">
            </input>
        </div>

        <div class="col">
            @* Password *@
            <input @bind="User.Password"
                   class="form-control"
                   type="password"
                   placeholder="Password">
            </input>
        </div>
    </div>
    <br>
    <button class="btn btn-primary float-end"
            type="submit">
        Login
    </button>
</EditForm>

@code {
    public LoginDto User { get; set; } = new LoginDto { IpAddress = "127.0.0.1" };
    private bool showError = false;
    private string errorMessage = string.Empty;

    async Task HandleLogin()
    {
        var resp = await AccountService.LoginAccount(User);
        if (resp.Result is not null)
        {
            var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
            await customAuthStateProvider.UpdateAuthenticationState(resp.Token);
            NavManager.NavigateTo("/", forceLoad: true);
        }
        else
        {
            showError = true;
            errorMessage = "Spr√≥buj ponownie.";
        }
    }
}
