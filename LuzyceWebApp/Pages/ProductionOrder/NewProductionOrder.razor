@page "/productionOrder/new"
@using Luzyce.Core.Models.Order
@using LuzyceWebApp.Services
@inject OrderService OrderService

@if (orders == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-4">
            <ul class="list-group">
                @foreach (var order in orders.Orders)
                {
                    <li class="list-group-item" @onclick="() => SelectOrder(order.Id)">
                        @order.Number - @order.Date.ToString("dd.MM.yyyy")
                        <br>
                        <span style="font-size: 0.6em;">@order.CustomerName</span>
                    </li>
                }
            </ul>
            <br>
            <nav aria-label="Page navigation">
                <ul class="pagination">
                    <li class="page-item @(orders.CurrentPage > 1 ? "" : "disabled")">
                        <a class="page-link"
                            @onclick="@(async () => await LoadOrders(orders.CurrentPage - 1))">Poprzedni</a>
                    </li>
                    @for (int i = orders.CurrentPage - 2; i <= orders.CurrentPage + 2; i++)
                    {
                        if (i < 1 || i > orders.TotalPages)
                        {
                            continue;
                        }
                        var pageIndex = i;
                        <li class="page-item @(orders.CurrentPage == pageIndex ? "active" : "")">
                            <a class="page-link" @onclick="@(async () => await LoadOrders(pageIndex))">@pageIndex</a>
                        </li>
                    }
                    <li class="page-item @(orders.CurrentPage < orders.TotalPages ? "" : "disabled")">
                        <a class="page-link" @onclick="@(async () => await LoadOrders(orders.CurrentPage + 1))">Kolejny</a>
                    </li>
                </ul>
            </nav>
        </div>
        <div class="col-md-8">
            @if (selectedOrder != null)
            {
                <h3>Pozycje dla @selectedOrder.Number</h3>
                <table class="table">
                    <thead>
                        <tr>
                            <th>Towar</th>
                            <th>Ilość</th>
                            <th>Ilość w magazynie</th>
                            <th>Jednostka</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in selectedOrder.Items)
                        {
                            <tr>
                                <td>@item.ProductName</td>
                                <td>@item.Quantity</td>
                                <td>@item.QuantityInStock</td>
                                <td>@item.Unit</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
}

@code {
    private GetOrdersResponseDto orders;
    private GetOrderResponseDto selectedOrder;

    protected override async Task OnInitializedAsync()
    {
        await LoadOrders(1);
    }

    private async Task LoadOrders(int pageNumber)
    {
        orders = await OrderService.GetOrdersAsync(pageNumber);
        selectedOrder = null;
    }

    private void SelectOrder(int orderId)
    {
        selectedOrder = orders.Orders.FirstOrDefault(o => o.Id == orderId);
    }
}
